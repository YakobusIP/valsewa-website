generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Status {
  AVAILABLE
  IN_USE
  NOT_AVAILABLE
}

model Account {
  id                  Int       @id @default(autoincrement())
  username            String
  accountCode         String    @unique
  description         String?
  accountRank         String
  availabilityStatus  Status    @default(AVAILABLE)
  nextBooking         DateTime?
  nextBookingDuration Int?
  expireAt            DateTime?
  bookingScheduledAt  DateTime?
  totalRentHour       Int       @default(0)
  rentHourUpdated     Boolean   @default(false)
  password            String
  passwordUpdatedAt   DateTime
  skinList            String[]
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt

  priceTier   PriceTier @relation(fields: [priceTierId], references: [id])
  priceTierId Int

  thumbnail   ImageUpload? @relation("Thumbnail", fields: [thumbnailId], references: [id])
  thumbnailId Int?         @unique

  otherImages ImageUpload[] @relation("OtherImages")
}

model PriceTier {
  id          Int      @id @default(autoincrement())
  code        String   @unique
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  accounts Account[]
}

model ImageUpload {
  id        Int      @id @default(autoincrement())
  imageUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  thumbnailOf Account? @relation("Thumbnail")

  account   Account? @relation("OtherImages", fields: [accountId], references: [id])
  accountId Int?
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
